@startuml

    abstract class Vehiculo {
        - esquinaActual : Esquina

        + {abstract} chocarContraPozo(unJugador: Jugador): boolean
        + {abstract} chocarContraPiquete(unJugador: Jugador): boolean
        + {abstract} aplicarSorpresaCambioVehiculo(unJugador: Jugador) : Vehiculo
        + setEsquinaActual(setEsquinaActual: Esquina): void
        + moverseAEsquina(jugador: Jugador, direccion: String); void
    }

    class Auto {
        + chocarContraPozo(jugador: Jugador): boolean
        + chocarContraPiquete(jugador: Jugador): boolean
        + aplicarSorpresaCambioVehiculo(): Vehiculo
        + atravezarControlPolicial(jugador: Jugador): boolean
    }

    class Moto {
        + chocarContraPozo(jugador: Jugador): boolean
        + chocarContraPiquete(jugador: Jugador): boolean
        + aplicarSorpresaCambioVehiculo(): Vehiculo
        + atravezarControlPolicial(jugador: Jugador): boolean
    }



    class CuatroPorCuatro {
        - pozosAtravezados : Int
        + chocarContraPozo(jugador: Jugador): boolean
        + chocarContraPiquete(jugador: Jugador): boolean
        + aplicarSorpresaCambioVehiculo(): Vehiculo
        + atravezarControlPolicial(jugador: Jugador): boolean
    }

   Vehiculo <|-- Auto
   Vehiculo <|-- Moto
   Vehiculo <|-- CuatroPorCuatro

@enduml