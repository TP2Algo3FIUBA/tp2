@startuml
title: autoAtraviesaCiudadYSeEncuentraConUnPozoYEsPenalizadaTresMovimientos

Actor test
test -> ":Juego"  : moverJugadorEnDireccion("Este")
":Juego"  -> ":Jugador" : moverEnDireccion("Este")
":Jugador" -> ":Auto" : moverseAEsquina(this, "Este")
":Auto"  -> "esquinaActual: Esquina" : moverVehiculo(jugador, "Este")
"esquinaActual: Esquina" -> cuadras : get("Este")
"esquinaActual: Esquina" <-- cuadras : cuadraAdirijirse = Cuadra
"esquinaActual: Esquina" -> ":Jugador" : incrementarMovimientos(1)
"esquinaActual: Esquina" -> "cuadraAdirijirse:Cuadra" : moverVehiculo(jugador, this)
"cuadraAdirijirse:Cuadra" -> ":Pozo"  : afectarJugador(jugador)
":Pozo"  -> ":Jugador" : getVehiculo
":Pozo"  <-- ":Jugador" : vehiculo = Auto
":Pozo"  -> ":Auto"  : chocarContraPozo(jugador)
":Auto"  -> ":Jugador" : incrementarMovimientos(3)
":Pozo"  <-- ":Auto"  : puedeAvanzar = true
"cuadraAdirijirse:Cuadra" <-- ":Pozo"  : puedeAvanzar = true
"cuadraAdirijirse:Cuadra" <- "cuadraAdirijirse:Cuadra" : obtenerEsquinaOpuesta(esquinaInicio)
"cuadraAdirijirse:Cuadra" -> ":Jugador" : getVehiculo
"cuadraAdirijirse:Cuadra" <-- ":Jugador" : vehiculo = Auto
"cuadraAdirijirse:Cuadra" -> ":Auto"  : setEsquinaActual(esquinaDestino)
test <-- "cuadraAdirijirse:Cuadra"



@enduml