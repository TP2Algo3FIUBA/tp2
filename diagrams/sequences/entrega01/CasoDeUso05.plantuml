@startuml
title: unAutoAtraviesaCiudadYSeEncuentraConUnPiqueteYNoEsPenalizada

Actor test
test -> ":Juego" : moverJugadorEnDireccion(Este)
":Juego" -> ":Jugador"  : moverEnDireccion(Este)
":Jugador"  -> ":Vehiculo" : moverseAEsquina(this, Este)
":Vehiculo" -> "esquinaActual: Esquina" : moverVehiculo(jugador, Este)
"esquinaActual: Esquina" -> "esquinaActual: Esquina" : getCuadra(Este)
"esquinaActual: Esquina" -> ":Jugador" : incrementarMovimientos(1)
return

"esquinaActual: Esquina" -> "cuadraAdirijirse: Cuadra" : moverVehiculo(jugador, this)
"cuadraAdirijirse: Cuadra" -> "cuadraAdirijirse: Cuadra" : obtenerEsquinaOpuesta(esquinaInicio)
"cuadraAdirijirse: Cuadra" -> ":Piquete" : afectarJugador(jugador, esquinaInicio, esquinaOpuesta)

":Piquete" -> ":Jugador" : getVehiculo()
return vehiculo
":Piquete" -> ":Vehiculo" : chocarContraPiquete(jugador, esquinaInicio, esquinaDestino)
":Vehiculo" -> ":EstadoAuto" : chocarContraPiquete(jugador, esquinaInicio, esquinaDestino)
":EstadoAuto" --> ":Vehiculo" : esquinaInicio
":Vehiculo" --> ":Piquete" : esquinaInicio

":Piquete" --> "cuadraAdirijirse: Cuadra" : esquinaDestino = esquinaInicio
"cuadraAdirijirse: Cuadra" -> ":Jugador" : setEsquinaActual(esquinaDestino)
":Jugador" -> ":Vehiculo" : setEsquinaActual(esquinaDestino)

return
":Jugador" --> "cuadraAdirijirse: Cuadra"
"cuadraAdirijirse: Cuadra" --> "esquinaActual: Esquina"
"esquinaActual: Esquina" --> ":Vehiculo"
":Vehiculo" --> ":Jugador"
":Jugador" --> ":Juego"
":Juego" --> test

@enduml