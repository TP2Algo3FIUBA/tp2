@startuml

title: unAutoAtraviesaLaCiudadYEncuentraUnaSorpresaFavorable


Actor test
test -> ":Juego" : moverJugadorEnDireccion(Este)
":Juego" -> ":Jugador"  : moverEnDireccion(Este)
":Jugador"  -> ":Vehiculo" : moverseAEsquina(this, Este)
":Vehiculo" -> "esquinaActual: Esquina" : moverVehiculo(jugador, Este)
"esquinaActual: Esquina" -> "esquinaActual: Esquina" : getCuadra(Este)
"esquinaActual: Esquina" -> ":Jugador" : incrementarMovimientos(1)
return

"esquinaActual: Esquina" -> "cuadraAdirijirse: Cuadra" : moverVehiculo(jugador, this)
"cuadraAdirijirse: Cuadra" -> "cuadraAdirijirse: Cuadra" : obtenerEsquinaOpuesta(esquinaInicio)
"cuadraAdirijirse: Cuadra" -> ":SorpresaFavorable" : afectarJugador(jugador, esquinaInicio, esquinaOpuesta)

":SorpresaFavorable" -> ":Jugador" : sorpresaFavorable()
":Jugador" -> ":Jugador" : this.movimientos = this.movimientos*0.8
":Jugador" --> ":SorpresaFavorable"

":SorpresaFavorable" --> "cuadraAdirijirse: Cuadra" : esquinaDestino = esquinaOpuesta
"cuadraAdirijirse: Cuadra" -> ":Jugador" : setEsquinaActual(esquinaDestino)
":Jugador" -> ":Vehiculo" : setEsquinaActual(esquinaDestino)

return
":Jugador" --> "cuadraAdirijirse: Cuadra"
"cuadraAdirijirse: Cuadra" --> "esquinaActual: Esquina"
"esquinaActual: Esquina" --> ":Vehiculo"
":Vehiculo" --> ":Jugador"
":Jugador" --> ":Juego"
":Juego" --> test

@enduml